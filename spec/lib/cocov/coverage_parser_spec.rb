# frozen_string_literal: true

require "rails_helper"

RSpec.describe Cocov::CoverageParser do
  subject(:parser) { described_class }

  let(:payload) { fixture_file("coverage_b64.txt") }
  let(:expected_result) do
    [
      :neutral,
      :neutral,
      1,
      1,
      1,
      1,
      :neutral,
      :neutral,
      :neutral,
      :neutral,
      :neutral,
      :neutral,
      :neutral,
      1,
      2,
      2,
      :neutral,
      1,
      :neutral,
      :neutral,
      :neutral,
      :neutral,
      :neutral,
      :neutral,
      :neutral,
      1,
      5,
      :neutral,
      11,
      3,
      3,
      :neutral,
      2,
      2,
      :neutral,
      1,
      :neutral,
      7,
      7,
      :neutral,
      6,
      6,
      :neutral,
      :neutral,
      :neutral,
      :neutral,
      :neutral,
      :neutral,
      :neutral,
      1,
      1,
      :neutral,
      :neutral,
      :neutral,
      :neutral,
      1,
      :neutral,
      1,
      1,
      1,
      :neutral,
      :neutral,
      :neutral,
      :neutral,
      :neutral,
      1,
      0,
      :neutral,
      :neutral,
      :neutral,
      :neutral,
      :neutral,
      :neutral,
      1,
      2,
      :neutral,
      :neutral,
      :neutral,
      1,
      :ignored,
      :ignored,
      :ignored,
      :ignored,
      :ignored,
      :ignored,
      :ignored,
      :ignored,
      :ignored,
      :ignored,
      :ignored,
      :neutral,
      :neutral,
      :neutral,
      :neutral,
      :neutral,
      :neutral,
      1,
      0,
      :neutral,
      :neutral,
      :neutral,
      :neutral,
      :neutral,
      :neutral,
      :neutral,
      :neutral,
      :neutral,
      0,
      0,
      0,
      0,
      :neutral,
      :neutral,
      :neutral,
      :neutral,
      :neutral,
      :neutral,
      1,
      3,
      3,
      3,
      2,
      1,
      :neutral,
      :neutral,
      1,
      :neutral,
      :neutral,
      :neutral,
      :neutral
    ]
  end

  it "parses data" do
    result = parser.parse(payload)
    expect(result).to eq expected_result
  end

  it "parses raw data" do
    result = parser.parse(Base64.decode64(payload))
    expect(result).to eq expected_result
  end

  it "detects invalid reports" do
    expect { parser.parse("\x01\x02") }.to raise_error(ArgumentError)
  end
end
