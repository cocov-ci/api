name: "Ruby on Rails CI"
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: cocov
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
      redis:
          image: redis:alpine
          ports:
            - "6379:6379"
    env:
      RAILS_ENV: test
      COCOV_DEV_DATABASE_HOST: "localhost"
      COCOV_REDIS_URL: "redis://localhost:6379/0"
      COCOV_REDIS_CACHE_URL: "redis://localhost:6379/1"
      COCOV_REPOSITORY_TOKEN: ${{ secrets.COCOV_REPOSITORY_TOKEN }}
      COCOV_API_URL: ${{ secrets.COCOV_API_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Prepare coverage-reporter
        run: |
          curl -sSL https://vito.io/private/coverage-reporter > .coverage-reporter
          chmod +x .coverage-reporter
          ./.coverage-reporter prepare

      - name: Install Ruby and gems
        uses: ruby/setup-ruby@ee2113536afb7f793eed4ce60e8d3b26db912da4 # v1.127.0
        with:
          bundler-cache: true

      - name: Set up database schema
        run: bin/rails db:recycle

      - name: Run tests
        run: bin/rake

      - name: Push coverage report
        run: ./.coverage-reporter submit

  build:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker build . -t cocov/api:dev -f Dockerfile-com

      - name: Push docker image
        run: docker push cocov/api:dev

      - name: Trigger update
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: ${{ secrets.DEPLOY_PORT }}
          script: cocov/update
